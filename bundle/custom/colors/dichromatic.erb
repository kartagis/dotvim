<%
    # RNB, A VIM COLORSCHEME TEMPLATE
    # Author:            Romain Lafourcade (https://github.com/romainl)
    # Canonical address: https://gist.github.com/romainl/5cd2f4ec222805f49eca
    # This template is designed to help vimmers create their own Vim colorscheme
    # without much effort.
    #
    # The only hard requirement is Ruby but Ruby knowledge is not necessary.
    #
    # The process is divided in four steps:
    #   1. start by editing your colorscheme's information,
    #   2. define your colors,
    #   3. define your highlight groups and links,
    #   4. and generate your colorscheme.
    # Step 1: information
    #
    # Make sure the name of your colorscheme is unique and attractive.
    # The description should fit in a single line with no linefeed.
    # 'background' can be "light" or "dark"
    information = {
        author: "Romain Lafourcade",
        email: "romainlafourcade@gmail.com",
        name: "dichromatic",
        description: "A 'dark' colorscheme for color blind vimmers. But not only.",
        background: "dark",
        webpage: "http://www.example.com"
    }

    # Step 2: colors
    #
    # black = [       give your color a convenient name
    #   "#000000",    hexadecimal color for GVim/MacVim
    #   0,            integer between 0 and 255 for terminals supporting 256 colors
    #   "black"       color name, can be "darkred", "red", "darkgreen", "green", "darkyellow",
    #                 "yellow", "darkblue", "blue", "darkmagenta", "magenta", "black",
    #                 "darkgrey", "grey", "white"
    # ]
    #
    white       = ["#FFFFFF", 15, "white"]
    sky         = ["#87D7D7", 116, "black"]
    teal        = ["#5FAF87", 72, "black"]
    moss        = ["#008700", 28, "black"]
    asparagus   = ["#AFAF00", 142, "black"]
    cantaloupe  = ["#DFDF87", 186, "black"]
    strawberry  = ["#D75F87", 168, "black"]
    orchid      = ["#AF5FAF", 133, "black"]
    rose        = ["#87005F", 89, "black"]
    eggplant    = ["#00005F", 17, "black"]
    black       = ["#000000", 0, "black"]

    # Step 3: highlights
    #
    # You can define an highlight group like this:
    #   [ "Normal",       name of the highlight group
    #     white,          the color used for background color, or use "NONE", "fg" or "bg"
    #     black,          the color used for foreground color, or use "NONE", "fg" or "bg"
    #     "NONE"          style, can be "bold", "underline", "reverse", "italic",
    #                     "standout", "NONE" or "undercurl"
    #   ]
    #
    # or link an highlight group to another:
    #   [ "Title", "Normal" ]
    #
    # You can define an additional color for the undercurl used for
    # highlighting spelling mistakes:
    #   [ "SpellBad",     name of the highlight group
    #     "NONE",         the color used for background color, or use "NONE", "fg" or "bg"
    #     red,            the color used for foreground color, or use "NONE", "fg" or "bg"
    #     "undercurl",    style
    #     red             color used for the undercurl
    #   ]
    #
    # The highlight groups below are fairly standard but some syntax scripts and
    # plugins may define their own. Feel free to append them to this array as needed.
    highlights = [
        [ "Normal", "NONE", white, "NONE" ],
        [ "NonText", "NONE", cantaloupe, "NONE" ],

        [ "Comment", "NONE", moss, "NONE" ],
        [ "Constant", "NONE", strawberry, "NONE" ],
        [ "Error", rose, cantaloupe, "reverse" ],
        [ "Identifier", "NONE", orchid, "NONE" ],
        [ "Ignore", "NONE", "NONE", "NONE" ],
        [ "PreProc", "NONE", cantaloupe, "NONE" ],
        [ "Special", "NONE", white, "NONE" ],
        [ "Statement", "NONE", orchid, "NONE" ],
        [ "String", "NONE", asparagus, "NONE" ],
        [ "Todo", "NONE", "NONE", "reverse" ],
        [ "Type", "NONE", sky, "NONE" ],
        [ "Underlined", "NONE", "NONE", "underline" ],

        [ "StatusLine", white, black, "NONE" ],
        [ "StatusLineNC", black, "NONE", "NONE" ],
        [ "VertSplit", black, black, "NONE" ],

        [ "TabLine", black, white, "NONE" ],
        [ "TabLineFill", black, black, "NONE" ],
        [ "TabLineSel", white, black, "NONE" ],

        [ "Title", "NONE", cantaloupe, "NONE" ],
        [ "LineNr", "NONE", strawberry, "NONE" ],

        [ "Cursor", cantaloupe, cantaloupe, "NONE" ],
        [ "CursorColumn", cantaloupe, cantaloupe, "NONE" ],
        [ "CursorLine", "NONE", "NONE", "underline" ],
        [ "CursorLineNr", "NONE", "NONE", "underline" ],

        [ "helpLeadBlank", "NONE", "NONE", "NONE" ],
        [ "helpNormal", "NONE", "NONE", "NONE" ],

        [ "Visual", cantaloupe, cantaloupe, "NONE" ],
        [ "VisualNOS", cantaloupe, cantaloupe, "NONE" ],

        [ "Pmenu", cantaloupe, black, "NONE" ],
        [ "PmenuSbar", asparagus, cantaloupe, "NONE" ],
        [ "PmenuSel", black, cantaloupe, "NONE" ],
        [ "PmenuThumb", cantaloupe, cantaloupe, "NONE" ],

        [ "FoldColumn", "NONE", cantaloupe, "NONE" ],
        [ "Folded", cantaloupe, cantaloupe, "NONE" ],

        [ "WildMenu", cantaloupe, cantaloupe, "NONE" ],
        [ "SpecialKey", "NONE", cantaloupe, "NONE" ],

        [ "DiffAdd", cantaloupe, cantaloupe, "NONE" ],
        [ "DiffChange", cantaloupe, cantaloupe, "NONE" ],
        [ "DiffDelete", cantaloupe, cantaloupe, "NONE" ],
        [ "DiffText", cantaloupe, cantaloupe, "NONE" ],

        [ "IncSearch", cantaloupe, cantaloupe, "reverse" ],
        [ "Search", cantaloupe, cantaloupe, "NONE" ],

        [ "Directory", "NONE", cantaloupe, "NONE" ],
        [ "MatchParen", cantaloupe, cantaloupe, "NONE" ],

        [ "SpellBad", "NONE", cantaloupe, "NONE", cantaloupe ],
        [ "SpellCap", "NONE", cantaloupe, "NONE", cantaloupe ],
        [ "SpellLocal", "NONE", cantaloupe, "NONE", cantaloupe ],
        [ "SpellRare", "NONE", cantaloupe, "NONE", cantaloupe ],

        [ "ColorColumn", eggplant, "NONE", "NONE" ],
        [ "signColumn", "NONE", cantaloupe, "NONE" ],

        [ "ErrorMsg", rose, white, "NONE" ],
        [ "ModeMsg", asparagus, black, "NONE" ],
        [ "MoreMsg", "NONE", asparagus, "NONE" ],
        [ "Question", "NONE", teal, "NONE" ],
        [ "WarningMsg", strawberry, black, "NONE" ]
    ]

    # Step 4: generation
    #
    # From a shell:
    #     $ erb -T - bar.erb > bar.vim
    #
    # From Vim:
    #     :!erb -T - % > %:r.vim

    # These online resources can help you design your colorscheme:
    #   * http://upload.wikimedia.org/wikipedia/en/1/15/Xterm_256color_chart.svg
    #     the xterm palette
    #   * http://whatcolor.herokuapp.com/
    #     play with hexadecimal colors right in the address bar
    #   * http://color.hailpixel.com/
    #     similar concept, fuzzier implementation
    #   * http://colourco.de/
    #     similar concept, fancier implementation
    #   * http://www.colr.org/
    #     extract a palette from an image
    #   * http://colores.manugarri.com/
    #     search for 'word', get images and color palettes
    #   * http://www.colourlovers.com/palettes
    #     user-created palettes
    #   * http://www.perbang.dk/color+scheme/
    #     a no-nonsense colorscheme generator
    #   * https://color.adobe.com/
    #     Adobe's colorscheme generator
    #   * http://paletton.com/
    #     The classic 'Color Scheme Designer', rebranded

    # Thanks to Barry Arthur (https://github.com/dahu) for the original idea.

    # You don't need to edit anything beyond this line.
-%>
" <%= information[:name] %>.vim -- Vim color scheme.
" Author:      <%= information[:author] %> (<%= information[:email] %>)
" Webpage:     <%= information[:webpage] %>
" Description: <%= information[:description] %>

hi clear

if exists('syntax_on')
  syntax reset
endif

let colors_name = '<%= information[:name] %>'

if &t_Co >= 256 || has('gui_running')
<% for highlight in highlights -%>
<% if highlight.length == 2 -%>
    hi link <%= highlight[0] %> <%= highlight[1] %>
<% elsif highlight.length == 4 -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][1] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][1] %> cterm=<%= highlight[3] %> guibg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][0] %> guifg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][0] %> gui=<%= highlight[3] %>
<% if highlight[0] == "Normal" -%>
    set background=<%= information[:background] %>
<% end -%>
<% else -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][1] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][1] %> cterm=<%= highlight[3] %> guibg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][0] %> guifg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][0] %> gui=<%= highlight[3] %> guisp=<%= highlight[4].kind_of?(String) ? highlight[4] : highlight[4][0] %>
<% end -%>
<% end -%>
elseif &t_Co == 8 || $TERM !~# '^linux' || &t_Co == 16
    set t_Co=16
<% for highlight in highlights -%>
<% if highlight.length == 2 -%>
    hi link <%= highlight[0] %> <%= highlight[1] %>
<% else -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][2] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][2] %> cterm=<%= highlight[3] %>
<% if highlight[0] == "Normal" -%>
    set background=<%= information[:background] %>
<% end -%>
<% end -%>
<% end -%>
endif

" Generated with RNB (https://gist.github.com/romainl/5cd2f4ec222805f49eca)
